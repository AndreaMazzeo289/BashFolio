{
    "commands": [
        "help",
        "projects",
        "publications",
        "social",
        "resume",
        "cls"
    ],
    "projects":
    {
        "error modelling by generative adversarial network": {
            "name": "Error modelling by Generative Adversarial Network",
            "media": "gan",
            "description": "This project was one of my Ph.D. projects. Its goal was to create a model that could automatically generate faulty images as if they were obtained from a fault injection campaign. I started building my own model based on the Pix2Pix GAN (taken from \"Image-to-Image Translation with GAN\"). However, during the early stages of training, it became evident that the chosen model with the considered dataset was experiencing a vanishing gradient issue. As a result, the model was transformed into a Wasserstein-GAN, which made the training more effective and the generated images more accurate.",
            "icons": ["python", "tensorflow", "pytorch"]
        },
        "fault injector for fpga": {
            "name": "Fault Injector for FPGA",
            "media": "fault",
            "description": "The implementation of a fault injection platform on an FPGA was carried out. The purpose of the fault injector was to test an application implemented on an FPGA, specifically targeting hardware errors. Image processing applications, commonly utilized in critical environments such as satellites and autonomous driving, were selected for this study. The fault injector was applied to three different FPGA boards: the Zedboard, Zybo, and VC707.",
            "icons": ["c", "vivado", "xilinx", "arm"]
        },
        "adaptive gaussian mixture model": {
            "name": "Adaptive Gaussian Mixture Model",
            "media": "gmm",
            "description": "The project was part of the \"Computer Vision and Image Analysis\" course that I took during my master's degree. The objective was to implement a background subtraction algorithm for analyzing highway webcam videos. The algorithm needed to adapt quickly to changing environmental conditions, such as weather and lighting. Initially, the Gaussian Mixture Model was used as the base algorithm, and a further model was built upon it. The resulting algorithm achieved accurate background subtraction under stable light conditions. However, during sunrise and sunset, when the lighting changes rapidly, the algorithm had a steeper learning curve.",
            "icons": ["python", "opencv", "anaconda"]
        },
        "3d object reconstruction" : {
            "name": "3D Object Reconstruction",
            "media": "3dReconstruction",
            "description": "The project was part of the \"Computer Vision and Image Analysis\" course that I undertook during my master's degree. Its purpose was to provide a practical application for the theoretical concepts covered in the course. The task involved extracting as much information as possible from a single side-view image of a car. This included determining the size of car components, estimating both extrinsic and intrinsic camera parameters, and performing a 3D reconstruction of the hidden wheels.",
            "icons": ["opencv", "matlab"]
        },
        "4-way set associative cache controller": {
            "name": "4-Way Set Associative Cache Controller",
            "media": "cache",
            "description": "The project was part of the \"Embedded Systems\" course I took during my master's degree studies. The project specifically revolved around designing a cache controller optimized for an FPGA. Due to the lower clock frequency of FPGAs compared to standard CPUs, all cache operations were designed to be completed within the fewest number of clock cycles possible. The chosen board for the project was the Nexys 4, which features an Artix-7 FPGA. Verilog was the hardware definition language utilized to implement the cache controller.",
            "icons": ["vivado", "xilinx"]
        },
        "igoup": {
            "name": "iGoUp",
            "media": "igoup",
            "description": "iGoUp is an application that offers a comprehensive set of tools to facilitate the management of your Instagram profile. The primary objective of iGoUp is to enhance the vibrancy of your profile by assisting you in making interactions and increasing your follower count. The application operates on a server and is entirely implemented in Python. The Selenium library has been utilized to automate actions.",
            "icons": ["python", "selenium", "pycharm"]
        },
        "euridit italia": {
            "name": "Euridit Italia",
            "media": "euridit",
            "description": "This website has been developed for \"Euridit Italia\", an Italian company, with the purpose of showcasing their services to potential customers.",
            "icons": ["html5", "css3", "javascript", "php"]
        },
        "lorenzo il magnifico": {
            "name": "Lorenzo il Magnifico",
            "media": "lorenzo",
            "description": "This project was developed as the final project for the bachelor's degree. \"Lorenzo il Magnifico\" is a multiplayer online game that has been entirely developed using Java.",
            "icons": ["eclipseide", "java"]
        },
        "object tracker robot": {
            "name": "Object Tracker Robot",
            "media": "pixy",
            "description": "This was my final project in high school. The objective was to implement a robot capable of tracking a moving object, such as a ball. The central component of the robot was a ZedBoard Zynq-7000 FPGA, which combines the capabilities of reconfigurable hardware with a dual-core Arm Cortex-A9 processor. On the FPGA, low-level drivers were written to control the sensor, while the logic was executed on the CPU. The computer vision aspect of the project relied on the Pixy CMUCam5, an artificial vision sensor based on CCD technology.",
            "icons": ["vivado", "xilinx", "cplusplus", "arm"]
        },
        "nessie 2013": {
            "name": "Nessie 2013",
            "media": "nessie",
            "description": "An FPGA-based robot was developed specifically for the Robocup Jr competition. The objective of the robot was to follow a designated path, avoid obstacles, locate a victim, and safely transport it to a designated zone. The robot interacted with its environment using a range of sensors including IR, UR, gyroscope, and color sensors. The core of the robot was powered by the TE0300 FPGA Modules with Xilinx Spartan-3E. The FPGA facilitated the implementation of sensor drivers and MicroBlaze for control purposes. This project spanned almost two years, involving various stages such as initial sketching, hardware selection, PCB design for sensor interfacing, and the development of both low-level and high-level code.",
            "icons": ["vivado", "xilinx", "cplusplus"]
        }
    },
    "papers":
    {
        "reliability evaluation of image processing applications": {
            "shortName": "Reliability Evaluation of Image Processing Applications",
            "name": "Usability-based Cross-Layer Reliability Evaluation of Image Processing Applications",
            "published": "2021 IEEE International Symposium on Defect and Fault Tolerance in VLSI and Nanotechnology Systems (DFT)",
            "abstract": "Image processing applications are today increasingly employed in safety- and mission-critical fields for perception tasks. It is therefore vital to analyse the reliability of the designed system before its deployment and, if necessary, to adopt specific hardening techniques. In this paper we propose a cross-layer reliability evaluation framework specifically meant for image processing applications accelerated onto SRAM-based FPGAs. The framework is based on two key concepts: i) an application-level error simulation based on validated error models to speedup execution times, and ii) an analysis of the usability of the output images based on the working scenario. Such usability analysis allows the designer to study whether the downstream system would be able to take correct decisions even if the image processing outputs are corrupted. We applied the proposed idea on a motion detection application and we compared the achieved accuracy and the required execution times with the ones of a circuit-level fault injector, here considered as a ground truth. This experiment highlighted an accuracy comparable with the one of the fault injection with a dramatic time saving.",
            "url": "https://ieeexplore.ieee.org/document/9568307"
        },
        "fault tolerance in image processing applications": {
            "shortName": "Fault Tolerance in Image Processing Applications",
            "name": "Approximation-Based Fault Tolerance in Image Processing Applications",
            "published": "IEEE Transactions on Emerging Topics in Computing ( Volume: 10, Issue: 2, 01 April-June 2022)",
            "abstract": "Image processing applications exhibit an intrinsic degree of fault tolerance due to i) the redundant nature of images, and ii) the possible ability of the consumers of the application output to effectively carry out their task even when it is slightly corrupted. In this application scenario the classical Duplication with Comparison (DWC) scheme, that rejects images (and requires re-executions) when the two replicasâ€™ outputs differ in a per-pixel comparison, may be over-conservative. In this article, we propose a novel lightweight fault tolerant scheme specifically tailored for image processing applications. The proposed scheme enhances the state-of-the-art by: i) improving the DWC scheme by replacing one of the two exact replicas with an approximated counterpart, and ii) allowing to distinguish between usable and unusable images instead of corrupted and uncorrupted ones by means of a Convolutional Neural Network-based checker. To tune the proposed scheme we introduce a specific design methodology that optimizes both execution time and fault detection capability of the hardened system. We report the results of the application of the proposed approach on two case studies; our proposal achieves an average execution time reduction larger than 30% w.r.t. the DWC with re-execution, and less than 4% misclassified unusable images.",
            "url": "https://ieeexplore.ieee.org/document/9505312"
        },
        "error modeling for image processing filters": {
            "shortName": "Error Modeling for Image Processing Filters",
            "name": "Error Modeling for Image Processing Filters accelerated onto SRAM-based FPGAs",
            "published": "2020 IEEE 26th International Symposium on On-Line Testing and Robust System Design (IOLTS)",
            "abstract": "Image processing is today employed in a variety of application fields, including safety- and mission-critical ones. In these scenarios it is vital to carefully analyse the reliability of the designed system before deployment and, if necessary, to adopt specific hardening techniques. Two are the techniques generally employed: circuit-level fault injection and application-level functional error simulation. In this paper we present a set of functional error models specific for a number of convolution-based filters that are the basic building blocks for a wide range of image processing applications. The presented error models, derived through a number of circuit-level fault injection experiments, may be integrated into application-level functional error simulators, bridging the gap between the two strategies. The presented error models are the first step towards combining the accuracy of fault injection and the flexibility of error simulation into a widely adopted reliability analysis tool.",
            "url": "https://ieeexplore.ieee.org/document/9159746"
        }
    },
    "aboutMe": "Hi I'm Andrea! ..."
}